{"ast":null,"code":"var _jsxFileName = \"/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/selector/Selector.js\";\n\n/* eslint-disable react/no-children-prop */\n\n/* eslint-disable react/jsx-boolean-value */\nimport React, { Component, Fragment } from 'react';\nimport './Selector.css';\nimport firebase from 'firebase';\nimport Loading from '../loading/Loading';\nexport class Selector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNewSave = () => {\n      const createName = this.state.createName;\n      const _this$props = this.props,\n            saveNewImg = _this$props.saveNewImg,\n            previewId = _this$props.previewId,\n            previewImg = _this$props.previewImg;\n      const newSave = {\n        email: firebase.auth().currentUser.email,\n        imgId: previewId,\n        content: previewImg.urls.regular,\n        collection: createName\n      };\n\n      if (createName !== '') {\n        saveNewImg(newSave);\n      }\n    };\n\n    this.handleCreate = e => {\n      this.setState({\n        createName: e.target.value\n      });\n    };\n\n    this.handleEditMode = () => {\n      this.setState({\n        editMode: true\n      });\n    };\n\n    this.state = {\n      createName: '',\n      editMode: false\n    };\n  }\n\n  componentDidMount() {\n    const _this$props2 = this.props,\n          previewId = _this$props2.previewId,\n          getPreviewImg = _this$props2.getPreviewImg,\n          getAllCollections = _this$props2.getAllCollections;\n    getPreviewImg(previewId);\n    getAllCollections(firebase.auth().currentUser.email);\n  }\n\n  handleSave(collection) {\n    const _this$props3 = this.props,\n          saveNewImg = _this$props3.saveNewImg,\n          previewId = _this$props3.previewId,\n          previewImg = _this$props3.previewImg;\n    const newSave = {\n      email: firebase.auth().currentUser.email,\n      imgId: previewId,\n      content: previewImg.urls.regular,\n      collection\n    };\n    saveNewImg(newSave);\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          handleClose = _this$props4.handleClose,\n          previewImg = _this$props4.previewImg,\n          allCollections = _this$props4.allCollections;\n    const _this$state = this.state,\n          createName = _this$state.createName,\n          editMode = _this$state.editMode;\n    const editCollection = React.createElement(\"div\", {\n      className: \"create_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"add_input\",\n      placeholder: \"Create a collection\",\n      value: createName,\n      onChange: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit_add\",\n      onClick: this.handleNewSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selector_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, previewImg.urls ? React.createElement(\"img\", {\n      className: \"preview_img_l\",\n      src: previewImg.urls.regular,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"edit_collect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"selector_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Save to Collection\"), !editMode ? React.createElement(\"button\", {\n      className: \"add_button\",\n      onClick: this.handleEditMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"+ Create a new collection\") : editCollection, React.createElement(\"div\", {\n      className: \"all_collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"All Collections\"), React.createElement(\"div\", {\n      className: \"item_group_s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, allCollections.message !== 'no content' ? allCollections.map((item, index) => {\n      if (allCollections[index]) {\n        return React.createElement(\"div\", {\n          className: \"item item_s\",\n          onClick: () => this.handleSave(item.collection),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, item.collection, React.createElement(\"img\", {\n          className: \"preview_img_s\",\n          src: item.content,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }));\n      }\n    }) : React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"selector_hover_layer\",\n      role: \"presentation\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Selector;","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/selector/Selector.js"],"names":["React","Component","Fragment","firebase","Loading","Selector","constructor","props","handleNewSave","createName","state","saveNewImg","previewId","previewImg","newSave","email","auth","currentUser","imgId","content","urls","regular","collection","handleCreate","e","setState","target","value","handleEditMode","editMode","componentDidMount","getPreviewImg","getAllCollections","handleSave","render","handleClose","allCollections","editCollection","message","map","item","index"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-children-prop */\n/* eslint-disable react/jsx-boolean-value */\n\nimport React, { Component, Fragment }  from 'react';\nimport './Selector.css';\nimport firebase from 'firebase';\nimport Loading from '../loading/Loading';\n\nexport class Selector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      createName:'',\n      editMode: false,\n    };\n  }\n  \n\n  componentDidMount(){\n    const { previewId,getPreviewImg,getAllCollections} = this.props;\n    getPreviewImg(previewId)\n    getAllCollections(firebase.auth().currentUser.email)\n\n  }\n\n\n  handleSave(collection){\n    const { saveNewImg, previewId, previewImg } = this.props;\n    const newSave = { \n      email: firebase.auth().currentUser.email,\n      imgId: previewId,\n      content: previewImg.urls.regular,\n      collection,\n    }\n    saveNewImg(newSave)\n  }\n\n  handleNewSave = () => {\n    const { createName } = this.state;\n    const { saveNewImg, previewId, previewImg } = this.props;\n    const newSave = { \n      email: firebase.auth().currentUser.email,\n      imgId: previewId,\n      content: previewImg.urls.regular,\n      collection: createName,\n    }\n    if (createName !== '') {\n      saveNewImg(newSave)\n    }\n  }\n\n  handleCreate = (e) => {\n    this.setState({\n      createName: e.target.value\n    })\n  }\n\n  handleEditMode = () => {\n    this.setState({\n      editMode: true,\n    })\n  }\n\n  render() {\n    const { handleClose,previewImg,allCollections} = this.props;\n    const { createName,editMode } = this.state;\n\n    const editCollection = (\n      <div className=\"create_wrapper\">\n        <input className=\"add_input\" placeholder=\"Create a collection\" value={createName} onChange={this.handleCreate}/>\n        <button type=\"submit\" className=\"submit_add\" onClick={this.handleNewSave}><i class=\"fas fa-check\"></i></button>\n      </div>\n    )\n    return (\n    <Fragment>\n    \t<div className=\"selector_container\">\n    \t  {previewImg.urls ? <img className=\"preview_img_l\" src={previewImg.urls.regular} alt=\"\" />:<div></div>}\n    \t  <div class=\"edit_collect\">\n    \t    <div className=\"selector_title\">Save to Collection</div>\n            {!editMode? <button className=\"add_button\" onClick={this.handleEditMode}>+ Create a new collection</button>:editCollection}\n    \t    <div className=\"all_collection\">\n            <div className=\"input_title\">All Collections</div>\n            <div className=\"item_group_s\">\n            {allCollections.message !== 'no content' ?\n              allCollections.map((item, index) => {\n                if (allCollections[index]) {\n                  return (\n                    <div className=\"item item_s\" onClick={() => this.handleSave(item.collection)}>{item.collection}\n                      <img className=\"preview_img_s\" src={item.content} alt=\"\" />\n                    </div>\n                  )\n                }\n              })\n            :<Loading />}\n            </div>\n          </div>\n    \t  </div>\n    \t</div>\n    \t<div className=\"selector_hover_layer\" role=\"presentation\" onClick={handleClose}></div>\n    </Fragment>\n    )\n  }\n}\n\nexport default Selector\n\n"]},"metadata":{},"sourceType":"module"}