{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Home from'../components/home/Home';import*as actions from'../actions';var HomeContainer=function HomeContainer(props){return React.createElement(Home,props);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getImgsList:function getImgsList(page,query){dispatch(actions.getImgsList(page,query));},getRandomImgs:function getRandomImgs(page){dispatch(actions.getRandomImgs(page));},getSynonymList:function getSynonymList(word){dispatch(actions.getSynonymList(word));},initImgs:function initImgs(array){dispatch(actions.initImgs(array));},query:function query(text){return dispatch(actions.query(text));},showTopSearch:function showTopSearch(_boolean){dispatch(actions.showTopSearch(_boolean));},getSingleImg:function getSingleImg(imgId){dispatch(actions.getSingleImg(imgId));}};};var mapStateToProps=function mapStateToProps(state){return{isLoadingGetImgs:state.posts.isLoadingGetImgs,isLoadingRandomImgs:state.posts.isLoadingRandomImgs,imgs:state.posts.imgs,totalPage:state.posts.totalPage,queryTxt:state.posts.queryTxt,isLoadingSynonym:state.posts.isLoadingSynonym,syn:state.posts.syn,topSearch:state.posts.topSearch,isAuthenticated:state.posts.isAuthenticated,singleImg:state.posts.singleImg,isLoadingSaveImg:state.posts.isLoadingSaveImg,isLoadingSingleImg:state.posts.isLoadingSingleImg};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(HomeContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/HomeContainer.js"],"names":["React","connect","withRouter","Home","actions","HomeContainer","props","mapDispatchToProps","dispatch","getImgsList","page","query","getRandomImgs","getSynonymList","word","initImgs","array","text","showTopSearch","boolean","getSingleImg","imgId","mapStateToProps","state","isLoadingGetImgs","posts","isLoadingRandomImgs","imgs","totalPage","queryTxt","isLoadingSynonym","syn","topSearch","isAuthenticated","singleImg","isLoadingSaveImg","isLoadingSingleImg"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,MAAO,qBAAC,IAAD,CAAUA,KAAV,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,WAAW,CAAE,qBAACC,IAAD,CAAMC,KAAN,CAAgB,CAC3BH,QAAQ,CAACJ,OAAO,CAACK,WAAR,CAAoBC,IAApB,CAAyBC,KAAzB,CAAD,CAAR,CACD,CAHI,CAILC,aAAa,CAAE,uBAACF,IAAD,CAAU,CACvBF,QAAQ,CAACJ,OAAO,CAACQ,aAAR,CAAsBF,IAAtB,CAAD,CAAR,CACD,CANI,CAOLG,cAAc,CAAE,wBAACC,IAAD,CAAU,CACxBN,QAAQ,CAACJ,OAAO,CAACS,cAAR,CAAuBC,IAAvB,CAAD,CAAR,CACD,CATI,CAULC,QAAQ,CAAE,kBAAAC,KAAK,CAAI,CACjBR,QAAQ,CAACJ,OAAO,CAACW,QAAR,CAAiBC,KAAjB,CAAD,CAAR,CACD,CAZI,CAaLL,KAAK,CAAE,eAAAM,IAAI,QAAIT,CAAAA,QAAQ,CAACJ,OAAO,CAACO,KAAR,CAAcM,IAAd,CAAD,CAAZ,EAbN,CAcLC,aAAa,CAAE,uBAACC,QAAD,CAAa,CAC1BX,QAAQ,CAACJ,OAAO,CAACc,aAAR,CAAsBC,QAAtB,CAAD,CAAR,CACD,CAhBI,CAiBLC,YAAY,CAAE,sBAACC,KAAD,CAAW,CACvBb,QAAQ,CAACJ,OAAO,CAACgB,YAAR,CAAqBC,KAArB,CAAD,CAAR,CACD,CAnBI,CAAP,CAqBD,CAtBD,CAuBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,gBAAgB,CAAED,KAAK,CAACE,KAAN,CAAYD,gBADzB,CAELE,mBAAmB,CAAEH,KAAK,CAACE,KAAN,CAAYC,mBAF5B,CAGLC,IAAI,CAAEJ,KAAK,CAACE,KAAN,CAAYE,IAHb,CAILC,SAAS,CAAEL,KAAK,CAACE,KAAN,CAAYG,SAJlB,CAKLC,QAAQ,CAAEN,KAAK,CAACE,KAAN,CAAYI,QALjB,CAMLC,gBAAgB,CAAEP,KAAK,CAACE,KAAN,CAAYK,gBANzB,CAOLC,GAAG,CAAER,KAAK,CAACE,KAAN,CAAYM,GAPZ,CAQLC,SAAS,CAAET,KAAK,CAACE,KAAN,CAAYO,SARlB,CASLC,eAAe,CAAEV,KAAK,CAACE,KAAN,CAAYQ,eATxB,CAULC,SAAS,CAAEX,KAAK,CAACE,KAAN,CAAYS,SAVlB,CAWLC,gBAAgB,CAAEZ,KAAK,CAACE,KAAN,CAAYU,gBAXzB,CAYLC,kBAAkB,CAAEb,KAAK,CAACE,KAAN,CAAYW,kBAZ3B,CAAP,CAcD,CAfD,CAgBA,cAAelC,CAAAA,UAAU,CAACD,OAAO,CAACqB,eAAD,CAAkBf,kBAAlB,CAAP,CAA6CF,aAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Home from '../components/home/Home';\nimport * as actions from '../actions';\n\nconst HomeContainer = (props) => {\n  return <Home {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getImgsList: (page,query) => {\n      dispatch(actions.getImgsList(page,query));\n    },\n    getRandomImgs: (page) => {\n      dispatch(actions.getRandomImgs(page));\n    },\n    getSynonymList: (word) => {\n      dispatch(actions.getSynonymList(word));\n    },\n    initImgs: array => {\n      dispatch(actions.initImgs(array));\n    },\n    query: text => dispatch(actions.query(text)),\n    showTopSearch: (boolean) => {\n      dispatch(actions.showTopSearch(boolean))\n    },\n    getSingleImg: (imgId) => {\n      dispatch(actions.getSingleImg(imgId));\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    isLoadingGetImgs: state.posts.isLoadingGetImgs,\n    isLoadingRandomImgs: state.posts.isLoadingRandomImgs,\n    imgs: state.posts.imgs,\n    totalPage: state.posts.totalPage,\n    queryTxt: state.posts.queryTxt,\n    isLoadingSynonym: state.posts.isLoadingSynonym,\n    syn: state.posts.syn,\n    topSearch: state.posts.topSearch,\n    isAuthenticated: state.posts.isAuthenticated,\n    singleImg: state.posts.singleImg,\n    isLoadingSaveImg: state.posts.isLoadingSaveImg,\n    isLoadingSingleImg: state.posts.isLoadingSingleImg,\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeContainer));\n"]},"metadata":{},"sourceType":"module"}