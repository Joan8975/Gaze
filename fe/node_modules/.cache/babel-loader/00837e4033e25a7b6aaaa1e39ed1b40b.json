{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Saves from'../components/saves/Saves';import*as actions from'../actions';var SavesContainer=function SavesContainer(props){return React.createElement(Saves,props);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getAllSaves:function getAllSaves(email){dispatch(actions.getAllSaves(email));},getAllCollections:function getAllCollections(email){dispatch(actions.getAllCollections(email));},deleteSingleSave:function deleteSingleSave(deleteSave){dispatch(actions.deleteSingleSave(deleteSave));},showTopSearch:function showTopSearch(_boolean){dispatch(actions.showTopSearch(_boolean));},isLoggedIn:function isLoggedIn(_boolean2){dispatch(actions.checkLogin(_boolean2));},deleteSingleCollection:function deleteSingleCollection(deleteCollection){dispatch(actions.deleteSingleCollection(deleteCollection));}};};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.posts.isAuthenticated,isLoadingAllSaves:state.posts.isLoadingAllSaves,allSaves:state.posts.allSaves,allCollections:state.posts.allCollections,isLoadingAllCollections:state.posts.isLoadingAllCollections,isLoadingDeleteSave:state.posts.isLoadingDeleteSave,isLoadingDeleteCollection:state.posts.isLoadingDeleteCollection};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(SavesContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/SavesContainer.js"],"names":["React","connect","withRouter","Saves","actions","SavesContainer","props","mapDispatchToProps","dispatch","getAllSaves","email","getAllCollections","deleteSingleSave","deleteSave","showTopSearch","boolean","isLoggedIn","checkLogin","deleteSingleCollection","deleteCollection","mapStateToProps","state","isAuthenticated","posts","isLoadingAllSaves","allSaves","allCollections","isLoadingAllCollections","isLoadingDeleteSave","isLoadingDeleteCollection"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,MAAO,qBAAC,KAAD,CAAWA,KAAX,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,WAAW,CAAE,qBAACC,KAAD,CAAW,CACtBF,QAAQ,CAACJ,OAAO,CAACK,WAAR,CAAoBC,KAApB,CAAD,CAAR,CACD,CAHI,CAILC,iBAAiB,CAAE,2BAACD,KAAD,CAAW,CAC5BF,QAAQ,CAACJ,OAAO,CAACO,iBAAR,CAA0BD,KAA1B,CAAD,CAAR,CACD,CANI,CAOLE,gBAAgB,CAAE,0BAACC,UAAD,CAAgB,CAChCL,QAAQ,CAACJ,OAAO,CAACQ,gBAAR,CAAyBC,UAAzB,CAAD,CAAR,CACD,CATI,CAULC,aAAa,CAAE,uBAACC,QAAD,CAAa,CAC1BP,QAAQ,CAACJ,OAAO,CAACU,aAAR,CAAsBC,QAAtB,CAAD,CAAR,CACD,CAZI,CAaLC,UAAU,CAAE,oBAACD,SAAD,CAAa,CACvBP,QAAQ,CAACJ,OAAO,CAACa,UAAR,CAAmBF,SAAnB,CAAD,CAAR,CACD,CAfI,CAgBLG,sBAAsB,CAAE,gCAACC,gBAAD,CAAsB,CAC5CX,QAAQ,CAACJ,OAAO,CAACc,sBAAR,CAA+BC,gBAA/B,CAAD,CAAR,CACD,CAlBI,CAAP,CAoBD,CArBD,CAsBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,eAAe,CAAED,KAAK,CAACE,KAAN,CAAYD,eADxB,CAELE,iBAAiB,CAAEH,KAAK,CAACE,KAAN,CAAYC,iBAF1B,CAGLC,QAAQ,CAAEJ,KAAK,CAACE,KAAN,CAAYE,QAHjB,CAILC,cAAc,CAAEL,KAAK,CAACE,KAAN,CAAYG,cAJvB,CAKLC,uBAAuB,CAAEN,KAAK,CAACE,KAAN,CAAYI,uBALhC,CAMLC,mBAAmB,CAAEP,KAAK,CAACE,KAAN,CAAYK,mBAN5B,CAOLC,yBAAyB,CAAER,KAAK,CAACE,KAAN,CAAYM,yBAPlC,CAAP,CASD,CAVD,CAWA,cAAe3B,CAAAA,UAAU,CAAED,OAAO,CAACmB,eAAD,CAAkBb,kBAAlB,CAAP,CAA6CF,cAA7C,CAAF,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Saves from '../components/saves/Saves';\nimport * as actions from '../actions';\n\nconst SavesContainer = (props) => {\n  return <Saves {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllSaves: (email) => {\n      dispatch(actions.getAllSaves(email));\n    },\n    getAllCollections: (email) => {\n      dispatch(actions.getAllCollections(email));\n    },\n    deleteSingleSave: (deleteSave) => {\n      dispatch(actions.deleteSingleSave(deleteSave));\n    },\n    showTopSearch: (boolean) => {\n      dispatch(actions.showTopSearch(boolean));\n    },\n    isLoggedIn: (boolean) => {\n      dispatch(actions.checkLogin(boolean))\n    },\n    deleteSingleCollection: (deleteCollection) => {\n      dispatch(actions.deleteSingleCollection(deleteCollection));\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingAllSaves: state.posts.isLoadingAllSaves,\n    allSaves: state.posts.allSaves,\n    allCollections: state.posts.allCollections,\n    isLoadingAllCollections: state.posts.isLoadingAllCollections,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    isLoadingDeleteCollection: state.posts.isLoadingDeleteCollection,\n  };\n};\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(SavesContainer)));\n"]},"metadata":{},"sourceType":"module"}