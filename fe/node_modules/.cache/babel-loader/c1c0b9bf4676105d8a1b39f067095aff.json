{"ast":null,"code":"var _jsxFileName = \"/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/signup/Signup.js\";\n\n/*eslint no-unused-vars: [\"error\", { \"a\": \"displayName\" }]*/\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Textbox } from \"react-inputs-validation\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      hasUsernameError: false,\n      hasEmailError: false,\n      hasPasswordError: false,\n      errorMsg: \"\"\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            hasEmailError = _this$state.hasEmailError,\n            hasPasswordError = _this$state.hasPasswordError,\n            email = _this$state.email,\n            password = _this$state.password,\n            username = _this$state.username;\n\n      if (!hasEmailError && !hasPasswordError && email !== '' && password !== '' && username !== '') {\n        firebase.auth().createUserWithEmailAndPassword(email, password).catch(error => {\n          // console.log('err='+error.code,error.message);\n          if (error !== '') {\n            this.setState({\n              email: \"\",\n              password: \"\",\n              username: \"\",\n              hasEmailError: true,\n              errorMsg: \"The email address is already in use by another account.\"\n            });\n          }\n        });\n        firebase.auth().onAuthStateChanged(user => {\n          if (user) {\n            user.updateProfile({\n              displayName: this.state.username\n            }).then(() => {\n              const displayName = user.displayName;\n            });\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const isLoggedIn = this.props.isLoggedIn;\n    firebase.auth().onAuthStateChanged(user => {\n      isLoggedIn(!!user);\n      console.log(\"user\", user);\n    });\n  }\n\n  componentDidUpdate(prepProps) {\n    const isAuthenticated = this.props.isAuthenticated;\n\n    if (prepProps.isAuthenticated === false && isAuthenticated === true) {\n      const history = this.props.history;\n      history.push('/');\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          hasEmailError = _this$state2.hasEmailError,\n          password = _this$state2.password,\n          hasPasswordError = _this$state2.hasPasswordError,\n          errorMsg = _this$state2.errorMsg,\n          hasUsernameError = _this$state2.hasUsernameError,\n          username = _this$state2.username;\n    return React.createElement(\"div\", {\n      className: \"login_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Start using Gaze!\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, errorMsg !== '' ? React.createElement(\"div\", {\n      className: \"errorMsg \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-exclamation-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), errorMsg) : '', React.createElement(\"div\", {\n      className: \"text_field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(email === '' ? 'input_hide' : 'input_title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Textbox, {\n      attributesInput: {\n        className: \"input_field  \".concat(!hasEmailError ? '' : 'input_empt'),\n        placeholder: \"Place your email here\",\n        type: \"text\"\n      },\n      onChange: (email, e) => {\n        this.setState({\n          email\n        });\n      },\n      onBlur: e => {},\n      validationCallback: res => this.setState({\n        hasEmailError: res\n      }),\n      value: email,\n      validationOption: {\n        name: \"Email\",\n        check: true,\n        required: true,\n        customFunc: email => {\n          const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n          if (reg.test(String(email).toLowerCase())) {\n            this.setState({\n              hasEmailError: false\n            });\n            return true;\n          } else {\n            this.setState({\n              hasEmailError: true\n            });\n            return \"Ivalid email address\";\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text_field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(username === '' ? 'input_hide' : 'input_title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Textbox, {\n      attributesInput: {\n        className: \"input_field  \".concat(!hasUsernameError ? '' : 'input_empt'),\n        placeholder: \"Place your username here\",\n        type: \"text\"\n      },\n      onChange: (username, e) => {\n        this.setState({\n          username\n        });\n      },\n      onBlur: e => {},\n      validationCallback: res => this.setState({\n        hasUsernameError: res\n      }),\n      value: username,\n      validationOption: {\n        name: \"Username\",\n        check: true,\n        required: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text_field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(password === '' ? 'input_hide' : 'input_title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Textbox, {\n      attributesInput: {\n        className: \"input_field  \".concat(!hasPasswordError ? '' : 'input_empt'),\n        placeholder: \"Place your password here (min. 6 char)\",\n        type: \"password\"\n      },\n      onChange: (password, e) => {\n        this.setState({\n          password\n        });\n      },\n      onBlur: e => {},\n      validationCallback: res => this.setState({\n        hasPasswordError: res\n      }),\n      value: password,\n      validationOption: {\n        name: \"Password\",\n        check: true,\n        required: true,\n        customFunc: password => {\n          const psw = /^\\w{6,}$/;\n\n          if (String(password).match(psw)) {\n            this.setState({\n              hasPasswordError: false\n            });\n            return true;\n          } else {\n            this.setState({\n              hasPasswordError: true\n            });\n            return \"Password cannot less than 6\";\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"mid_button \".concat(email === '' || password === '' || hasEmailError || hasPasswordError ? 'disable_button' : 'common_button'),\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(Link, {\n      className: \"note_button\",\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default withRouter(Signup);","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/signup/Signup.js"],"names":["React","Component","firebase","withRouter","Link","Textbox","Signup","state","email","password","username","hasUsernameError","hasEmailError","hasPasswordError","errorMsg","handleSubmit","e","preventDefault","auth","createUserWithEmailAndPassword","catch","error","setState","onAuthStateChanged","user","updateProfile","displayName","then","componentDidMount","isLoggedIn","props","console","log","componentDidUpdate","prepProps","isAuthenticated","history","push","render","className","placeholder","type","res","name","check","required","customFunc","reg","test","String","toLowerCase","psw","match"],"mappings":"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","sourcesContent":["/*eslint no-unused-vars: [\"error\", { \"a\": \"displayName\" }]*/\n\nimport React, { Component } from 'react'\nimport firebase from 'firebase';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Textbox } from \"react-inputs-validation\";\n\nclass Signup extends Component {\n  state = {\n    email: \"\",\n    password:\"\",\n    username:\"\",\n    hasUsernameError: false,\n    hasEmailError: false,\n    hasPasswordError: false,\n    errorMsg:\"\",\n  };\n\n  componentDidMount() {\n    const { isLoggedIn } = this.props;\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        isLoggedIn(!!user)\n        console.log(\"user\",user)\n      }\n    );\n  }\n\n  componentDidUpdate(prepProps) {\n    const {isAuthenticated } = this.props;\n    if (prepProps.isAuthenticated === false && isAuthenticated === true) {\n        const { history } = this.props;\n        history.push('/');\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { hasEmailError, hasPasswordError, email, password, username } = this.state;\n    if ( !hasEmailError && !hasPasswordError && email !== '' && password !== '' && username !== '') {\n      firebase.auth().createUserWithEmailAndPassword(\n        email,\n        password\n      ).catch(error => {\n        // console.log('err='+error.code,error.message);\n        if (error !== '') {\n          this.setState({\n            email: \"\",\n            password: \"\",\n            username: \"\",\n            hasEmailError: true,\n            errorMsg: \"The email address is already in use by another account.\",\n          })\n        }\n      });\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          user.updateProfile({\n            displayName: this.state.username,\n          }).then(() => {\n            const displayName = user.displayName;\n            \n          })\n        }\n      });\n    }\n  }\n\n  render() {\n    const { email ,hasEmailError, password, hasPasswordError , errorMsg, hasUsernameError,username} = this.state;\n    return (\n      <div className=\"login_container\">\n        <div className=\"login_title\">Start using Gaze!</div>\n        <form>\n          {errorMsg !== '' ? <div className=\"errorMsg \"><i class=\"fas fa-exclamation-circle\"></i>{errorMsg}</div>: ''}\n          <div className=\"text_field\">\n            <div className={`${email === '' ? 'input_hide': 'input_title'}`}>Email</div>\n            <Textbox\n                attributesInput={{\n                  className: `input_field  ${!hasEmailError ? '': 'input_empt'}`,\n                  placeholder: \"Place your email here\",\n                  type: \"text\"\n                }}\n                onChange={(email, e) => {\n                  this.setState({ email });\n                }} \n                onBlur={e => {}}\n                validationCallback={res =>\n                  this.setState({\n                    hasEmailError: res,\n                  })\n                }\n                value={email}\n                validationOption={{\n                  name: \"Email\", \n                  check: true,\n                  required: true,\n                  customFunc: email => {\n                    const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                    if (reg.test(String(email).toLowerCase())) {\n                      this.setState({ hasEmailError: false});\n                      return true;\n                    } else {\n                      this.setState({ hasEmailError: true,});\n                      return \"Ivalid email address\";\n                    }\n                  }\n                }}\n              />\n          </div>\n          <div className=\"text_field\">\n            <div className={`${username === '' ? 'input_hide': 'input_title'}`}>Username</div>\n            <Textbox\n              attributesInput={{\n                className: `input_field  ${!hasUsernameError ? '': 'input_empt'}`,\n                placeholder: \"Place your username here\",\n                type: \"text\"\n              }}\n              onChange={(username, e) => {\n                this.setState({ username });\n              }} \n              onBlur={e => {}}\n              validationCallback={res =>\n                this.setState({\n                  hasUsernameError: res,\n                })\n              }\n              value={username}\n              validationOption={{\n                name: \"Username\", \n                check: true,\n                required: true,\n              }}\n            />\n          </div>\n          <div className=\"text_field\">\n            <div className={`${password === '' ? 'input_hide': 'input_title'}`}>Password</div>\n            <Textbox\n              attributesInput={{\n                className: `input_field  ${!hasPasswordError ? '': 'input_empt'}`,\n                placeholder: \"Place your password here (min. 6 char)\",\n                type: \"password\"\n              }}\n              onChange={(password, e) => {\n                this.setState({ password });\n              }} \n              onBlur={e => {}}\n              validationCallback={res =>\n                this.setState({\n                  hasPasswordError: res,\n                })\n              }\n              value={password}\n              validationOption={{\n                name: \"Password\", \n                check: true,\n                required: true,\n                customFunc: (password) => {\n                  const psw = /^\\w{6,}$/;\n                  if (String(password).match(psw)) {\n                    this.setState({ hasPasswordError: false});\n                    return true;\n                  } else {\n                    this.setState({ hasPasswordError: true,});\n                    return \"Password cannot less than 6\";\n                  }\n                }\n              }}\n            />\n          </div>\n          <button type=\"submit\" className={`mid_button ${email === '' || password === '' || hasEmailError || hasPasswordError ? 'disable_button': 'common_button'}`} onClick={this.handleSubmit} >Submit</button>\n        </form>\n        <p>Already have an account? <Link className=\"note_button\" to=\"/login\">Login</Link></p>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Signup)\n"]},"metadata":{},"sourceType":"module"}