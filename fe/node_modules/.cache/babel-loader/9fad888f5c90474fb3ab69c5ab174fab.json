{"ast":null,"code":"var _jsxFileName = \"/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/login/Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Textbox } from \"react-inputs-validation\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      hasEmailError: false,\n      hasPasswordError: false,\n      errorMsg: \"\"\n    };\n    this.uiConfig = {\n      signInFlow: 'popup',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: () => false\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            hasEmailError = _this$state.hasEmailError,\n            hasPasswordError = _this$state.hasPasswordError,\n            email = _this$state.email,\n            password = _this$state.password;\n\n      if (!hasEmailError && !hasPasswordError && email !== '' && password !== '') {\n        firebase.auth().signInWithEmailAndPassword(email, password).catch(error => {\n          // console.log('err='+error.code,error.message);\n          if (error !== '') {\n            this.setState({\n              email: \"\",\n              password: \"\",\n              hasEmailError: true,\n              hasPasswordError: true,\n              errorMsg: \"Your email or password is not correct.\"\n            });\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const isLoggedIn = this.props.isLoggedIn;\n    firebase.auth().onAuthStateChanged(user => {\n      isLoggedIn(!!user);\n    });\n  }\n\n  componentDidUpdate(prepProps, prevState) {\n    const isAuthenticated = this.props.isAuthenticated;\n\n    if (prepProps.isAuthenticated === false && isAuthenticated === true) {\n      const history = this.props.history;\n      history.push('/');\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          hasEmailError = _this$state2.hasEmailError,\n          password = _this$state2.password,\n          hasPasswordError = _this$state2.hasPasswordError,\n          errorMsg = _this$state2.errorMsg;\n    return React.createElement(\"div\", {\n      className: \"login_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Great to see you again!\"), React.createElement(StyledFirebaseAuth, {\n      style: {\n        backGround: 'transparent'\n      },\n      uiConfig: this.uiConfig,\n      firebaseAuth: firebase.auth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"or\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, errorMsg !== '' ? React.createElement(\"div\", {\n      className: \"errorMsg \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-exclamation-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), errorMsg) : '', React.createElement(\"div\", {\n      className: \"text_field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(email === '' ? 'input_hide' : 'input_title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Textbox, {\n      attributesInput: {\n        className: \"input_field  \".concat(!hasEmailError ? '' : 'input_empt'),\n        placeholder: \"Place your email here\",\n        type: \"text\"\n      },\n      onChange: (email, e) => {\n        this.setState({\n          email\n        });\n      },\n      onBlur: e => {},\n      validationCallback: res => this.setState({\n        hasEmailError: res\n      }),\n      value: email,\n      validationOption: {\n        name: \"Email\",\n        check: true,\n        required: true,\n        customFunc: email => {\n          const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n          if (reg.test(String(email).toLowerCase())) {\n            this.setState({\n              hasEmailError: false\n            });\n            return true;\n          } else {\n            this.setState({\n              hasEmailError: true\n            });\n            return \"Ivalid email address\";\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text_field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\".concat(password === '' ? 'input_hide' : 'input_title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Textbox, {\n      attributesInput: {\n        className: \"input_field  \".concat(!hasPasswordError ? '' : 'input_empt'),\n        placeholder: \"Place your password here (min. 6 char)\",\n        type: \"password\"\n      },\n      onChange: (password, e) => {\n        this.setState({\n          password\n        });\n      },\n      onBlur: e => {},\n      validationCallback: res => this.setState({\n        hasPasswordError: res\n      }),\n      value: password,\n      validationOption: {\n        name: \"Password\",\n        check: true,\n        required: true,\n        customFunc: password => {\n          const pwd = /^\\w{6,}$/;\n\n          if (String(password).match(pwd)) {\n            this.setState({\n              hasPasswordError: false\n            });\n            return true;\n          } else {\n            this.setState({\n              hasPasswordError: true\n            });\n            return \"Password cannot less than 6\";\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"mid_button \".concat(email === '' || password === '' || hasEmailError || hasPasswordError ? 'disable_button' : 'common_button'),\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"No account yet? \", React.createElement(Link, {\n      className: \"note_button\",\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Sign up\")));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/login/Login.js"],"names":["React","Component","firebase","StyledFirebaseAuth","withRouter","Link","Textbox","Login","state","email","password","hasEmailError","hasPasswordError","errorMsg","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","handleSubmit","e","preventDefault","signInWithEmailAndPassword","catch","error","setState","componentDidMount","isLoggedIn","props","onAuthStateChanged","user","componentDidUpdate","prepProps","prevState","isAuthenticated","history","push","render","backGround","className","placeholder","type","res","name","check","required","customFunc","reg","test","String","toLowerCase","pwd","match"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Login.css';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Textbox } from \"react-inputs-validation\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password:\"\",\n    hasEmailError: false,\n    hasPasswordError: false,\n    errorMsg:\"\",\n  };\n\n  uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  componentDidMount() {\n    const { isLoggedIn } = this.props;\n    firebase.auth().onAuthStateChanged(\n      (user) => {\n        isLoggedIn(!!user)\n      }\n    );\n  }\n\n  componentDidUpdate(prepProps,prevState) {\n    const { isAuthenticated } = this.props;\n    if (prepProps.isAuthenticated === false && isAuthenticated === true) {\n        const { history } = this.props;\n        history.push('/');\n    }\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { hasEmailError, hasPasswordError, email, password } = this.state;\n    if ( !hasEmailError && !hasPasswordError && email !== '' && password !== '') {\n        firebase.auth().signInWithEmailAndPassword(\n          email,\n          password\n        ).catch(error => {\n          // console.log('err='+error.code,error.message);\n          if (error !== '') {\n            this.setState({\n              email: \"\",\n              password: \"\",\n              hasEmailError: true,\n              hasPasswordError: true,\n              errorMsg: \"Your email or password is not correct.\",\n            })\n          }\n        })\n    }\n  }\n\n  render() {\n    const { email ,hasEmailError, password, hasPasswordError , errorMsg} = this.state;\n    return (\n      <div className=\"login_container\">\n        <div className=\"login_title\">Great to see you again!</div>\n        <StyledFirebaseAuth style={{backGround:'transparent'}}uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        <p>or</p>\n        <form>\n          {errorMsg !== '' ? <div className=\"errorMsg \"><i class=\"fas fa-exclamation-circle\"></i>{errorMsg}</div>: ''}\n          <div className=\"text_field\">\n            <div className={`${email === '' ? 'input_hide': 'input_title'}`}>Email</div>\n            <Textbox\n              attributesInput={{\n                className: `input_field  ${!hasEmailError ? '': 'input_empt'}`,\n                placeholder: \"Place your email here\",\n                type: \"text\"\n              }}\n              onChange={(email, e) => {\n                this.setState({ email });\n              }} \n              onBlur={e => {}}\n              validationCallback={res =>\n                this.setState({\n                  hasEmailError: res,\n                })\n              }\n              value={email}\n              validationOption={{\n                name: \"Email\", \n                check: true,\n                required: true,\n                customFunc: (email) => {\n                  const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                  if (reg.test(String(email).toLowerCase())) {\n                    this.setState({ hasEmailError: false});\n                    return true;\n                  } else {\n                    this.setState({ hasEmailError: true,});\n                    return \"Ivalid email address\";\n                  }\n                }\n              }}\n            />\n          </div>\n          <div className=\"text_field\">\n            <div className={`${password === '' ? 'input_hide': 'input_title'}`}>Password</div>\n            <Textbox\n                attributesInput={{\n                  className: `input_field  ${!hasPasswordError ? '': 'input_empt'}`,\n                  placeholder: \"Place your password here (min. 6 char)\",\n                  type: \"password\"\n                }}\n                onChange={(password, e) => {\n                  this.setState({ password });\n                }}\n                onBlur={e => {}}\n                validationCallback={res =>\n                  this.setState({\n                    hasPasswordError: res,\n                  })\n                }\n                value={password}\n                validationOption={{\n                  name: \"Password\", \n                  check: true,\n                  required: true,\n                  customFunc: (password) => {\n                    const pwd = /^\\w{6,}$/;\n                    if (String(password).match(pwd)) {\n                      this.setState({ hasPasswordError: false});\n                      return true;\n                    } else {\n                      this.setState({ hasPasswordError: true,});\n                      return \"Password cannot less than 6\";\n                    }\n                  }\n                }}\n              />\n          </div>\n          <button type=\"submit\" className={`mid_button ${email === '' || password === '' || hasEmailError || hasPasswordError  ? 'disable_button': 'common_button'}`} onClick={this.handleSubmit} >Submit</button>\n        </form>\n        <p>No account yet? <Link className=\"note_button\" to=\"/signup\">Sign up</Link></p>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login)"]},"metadata":{},"sourceType":"module"}