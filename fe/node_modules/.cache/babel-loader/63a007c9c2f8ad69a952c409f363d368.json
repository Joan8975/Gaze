{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Login from'../components/login/Login';import*as actions from'../actions';var LoginContainer=function LoginContainer(props){return React.createElement(Login,props);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{isLoggedIn:function isLoggedIn(_boolean){dispatch(actions.checkLogin(_boolean));}};};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.posts.isAuthenticated};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(LoginContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/LoginContainer.js"],"names":["React","connect","withRouter","Login","actions","LoginContainer","props","mapDispatchToProps","dispatch","isLoggedIn","boolean","checkLogin","mapStateToProps","state","isAuthenticated","posts"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,MAAO,qBAAC,KAAD,CAAWA,KAAX,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,UAAU,CAAE,oBAACC,QAAD,CAAa,CACvBF,QAAQ,CAACJ,OAAO,CAACO,UAAR,CAAmBD,QAAnB,CAAD,CAAR,CACD,CAHI,CAAP,CAKD,CAND,CAOA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,eAAe,CAAED,KAAK,CAACE,KAAN,CAAYD,eADxB,CAAP,CAGD,CAJD,CAKA,cAAeZ,CAAAA,UAAU,CAACD,OAAO,CAACW,eAAD,CAAkBL,kBAAlB,CAAP,CAA6CF,cAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Login from '../components/login/Login';\nimport * as actions from '../actions';\n\nconst LoginContainer = (props) => {\n  return <Login {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    isLoggedIn: (boolean) => {\n      dispatch(actions.checkLogin(boolean))\n    }\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.posts.isAuthenticated\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginContainer));\n"]},"metadata":{},"sourceType":"module"}