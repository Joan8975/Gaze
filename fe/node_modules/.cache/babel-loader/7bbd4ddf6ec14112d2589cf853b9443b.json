{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import Nav from'../components/nav/Nav';import{withRouter}from'react-router-dom';import*as actions from'../actions';var NavContainer=function NavContainer(props){return React.createElement(Nav,props);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateNav:function updateNav(text){return dispatch(actions.updateNav(text));},query:function query(text){return dispatch(actions.query(text));},getImgsList:function getImgsList(page,query){dispatch(actions.getImgsList(page,query));},getSynonymList:function getSynonymList(word){dispatch(actions.getSynonymList(word));},initImgs:function initImgs(array){dispatch(actions.initImgs(array));},showTopSearch:function showTopSearch(_boolean){dispatch(actions.showTopSearch(_boolean));},isLoggedIn:function isLoggedIn(_boolean2){dispatch(actions.checkLogin(_boolean2));}};};var mapStateToProps=function mapStateToProps(state){return{navText:state.nav.navText,queryTxt:state.posts.queryTxt,topSearch:state.posts.topSearch,isAuthenticated:state.posts.isAuthenticated,isLoadingSaveImg:state.posts.isLoadingSaveImg,isLoadingDeleteSave:state.posts.isLoadingDeleteSave,isLoadingDeleteCollection:state.posts.isLoadingDeleteCollection};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(NavContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/NavContainer.js"],"names":["React","connect","Nav","withRouter","actions","NavContainer","props","mapDispatchToProps","dispatch","updateNav","text","query","getImgsList","page","getSynonymList","word","initImgs","array","showTopSearch","boolean","isLoggedIn","checkLogin","mapStateToProps","state","navText","nav","queryTxt","posts","topSearch","isAuthenticated","isLoadingSaveImg","isLoadingDeleteSave","isLoadingDeleteCollection"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,MAAO,qBAAC,GAAD,CAASA,KAAT,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,SAAS,CAAE,mBAAAC,IAAI,QAAIF,CAAAA,QAAQ,CAACJ,OAAO,CAACK,SAAR,CAAkBC,IAAlB,CAAD,CAAZ,EADV,CAELC,KAAK,CAAE,eAAAD,IAAI,QAAIF,CAAAA,QAAQ,CAACJ,OAAO,CAACO,KAAR,CAAcD,IAAd,CAAD,CAAZ,EAFN,CAGLE,WAAW,CAAE,qBAACC,IAAD,CAAMF,KAAN,CAAgB,CAC3BH,QAAQ,CAACJ,OAAO,CAACQ,WAAR,CAAoBC,IAApB,CAAyBF,KAAzB,CAAD,CAAR,CACD,CALI,CAMLG,cAAc,CAAE,wBAACC,IAAD,CAAU,CACxBP,QAAQ,CAACJ,OAAO,CAACU,cAAR,CAAuBC,IAAvB,CAAD,CAAR,CACD,CARI,CASLC,QAAQ,CAAE,kBAAAC,KAAK,CAAI,CACjBT,QAAQ,CAACJ,OAAO,CAACY,QAAR,CAAiBC,KAAjB,CAAD,CAAR,CACD,CAXI,CAYLC,aAAa,CAAE,uBAACC,QAAD,CAAa,CAC1BX,QAAQ,CAACJ,OAAO,CAACc,aAAR,CAAsBC,QAAtB,CAAD,CAAR,CACD,CAdI,CAeLC,UAAU,CAAE,oBAACD,SAAD,CAAa,CACvBX,QAAQ,CAACJ,OAAO,CAACiB,UAAR,CAAmBF,SAAnB,CAAD,CAAR,CACD,CAjBI,CAAP,CAmBD,CApBD,CAqBA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,OAAO,CAAED,KAAK,CAACE,GAAN,CAAUD,OADd,CAELE,QAAQ,CAAEH,KAAK,CAACI,KAAN,CAAYD,QAFjB,CAGLE,SAAS,CAAEL,KAAK,CAACI,KAAN,CAAYC,SAHlB,CAILC,eAAe,CAAEN,KAAK,CAACI,KAAN,CAAYE,eAJxB,CAKLC,gBAAgB,CAAEP,KAAK,CAACI,KAAN,CAAYG,gBALzB,CAMLC,mBAAmB,CAAER,KAAK,CAACI,KAAN,CAAYI,mBAN5B,CAOLC,yBAAyB,CAAET,KAAK,CAACI,KAAN,CAAYK,yBAPlC,CAAP,CASD,CAVD,CAYA,cAAe7B,CAAAA,UAAU,CAACF,OAAO,CAACqB,eAAD,CAAkBf,kBAAlB,CAAP,CAA6CF,YAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../components/nav/Nav';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../actions';\n\nconst NavContainer = (props) => {\n  return <Nav {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateNav: text => dispatch(actions.updateNav(text)),\n    query: text => dispatch(actions.query(text)),\n    getImgsList: (page,query) => {\n      dispatch(actions.getImgsList(page,query));\n    },\n    getSynonymList: (word) => {\n      dispatch(actions.getSynonymList(word));\n    },\n    initImgs: array => {\n      dispatch(actions.initImgs(array));\n    },\n    showTopSearch: (boolean) => {\n      dispatch(actions.showTopSearch(boolean));\n    },\n    isLoggedIn: (boolean) => {\n      dispatch(actions.checkLogin(boolean))\n    }\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    navText: state.nav.navText,\n    queryTxt: state.posts.queryTxt,\n    topSearch: state.posts.topSearch,\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingSaveImg: state.posts.isLoadingSaveImg,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    isLoadingDeleteCollection: state.posts.isLoadingDeleteCollection,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavContainer));\n"]},"metadata":{},"sourceType":"module"}