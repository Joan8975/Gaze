{"ast":null,"code":"var _jsxFileName = \"/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/SavesContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Saves from '../components/saves/Saves';\nimport * as actions from '../actions';\n\nconst SavesContainer = props => {\n  return React.createElement(Saves, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllSaves: email => {\n      dispatch(actions.getAllSaves(email));\n    },\n    getAllCollections: email => {\n      dispatch(actions.getAllCollections(email));\n    },\n    deleteSingleSave: deleteSave => {\n      dispatch(actions.deleteSingleSave(deleteSave));\n    },\n    showTopSearch: boolean => {\n      dispatch(actions.showTopSearch(boolean));\n    },\n    isLoggedIn: boolean => {\n      dispatch(actions.checkLogin(boolean));\n    },\n    deleteSingleCollection: deleteCollection => {\n      dispatch(actions.deleteSingleCollection(deleteCollection));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingAllSaves: state.posts.isLoadingAllSaves,\n    allSaves: state.posts.allSaves,\n    allCollections: state.posts.allCollections,\n    isLoadingAllCollections: state.posts.isLoadingAllCollections,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    isLoadingDeleteCollection: state.posts.isLoadingDeleteCollection\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SavesContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/SavesContainer.js"],"names":["React","connect","withRouter","Saves","actions","SavesContainer","props","mapDispatchToProps","dispatch","getAllSaves","email","getAllCollections","deleteSingleSave","deleteSave","showTopSearch","boolean","isLoggedIn","checkLogin","deleteSingleCollection","deleteCollection","mapStateToProps","state","isAuthenticated","posts","isLoadingAllSaves","allSaves","allCollections","isLoadingAllCollections","isLoadingDeleteSave","isLoadingDeleteCollection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,SAAO,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACtBF,MAAAA,QAAQ,CAACJ,OAAO,CAACK,WAAR,CAAoBC,KAApB,CAAD,CAAR;AACD,KAHI;AAILC,IAAAA,iBAAiB,EAAGD,KAAD,IAAW;AAC5BF,MAAAA,QAAQ,CAACJ,OAAO,CAACO,iBAAR,CAA0BD,KAA1B,CAAD,CAAR;AACD,KANI;AAOLE,IAAAA,gBAAgB,EAAGC,UAAD,IAAgB;AAChCL,MAAAA,QAAQ,CAACJ,OAAO,CAACQ,gBAAR,CAAyBC,UAAzB,CAAD,CAAR;AACD,KATI;AAULC,IAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BP,MAAAA,QAAQ,CAACJ,OAAO,CAACU,aAAR,CAAsBC,OAAtB,CAAD,CAAR;AACD,KAZI;AAaLC,IAAAA,UAAU,EAAGD,OAAD,IAAa;AACvBP,MAAAA,QAAQ,CAACJ,OAAO,CAACa,UAAR,CAAmBF,OAAnB,CAAD,CAAR;AACD,KAfI;AAgBLG,IAAAA,sBAAsB,EAAGC,gBAAD,IAAsB;AAC5CX,MAAAA,QAAQ,CAACJ,OAAO,CAACc,sBAAR,CAA+BC,gBAA/B,CAAD,CAAR;AACD;AAlBI,GAAP;AAoBD,CArBD;;AAsBA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,CAAYD,eADxB;AAELE,IAAAA,iBAAiB,EAAEH,KAAK,CAACE,KAAN,CAAYC,iBAF1B;AAGLC,IAAAA,QAAQ,EAAEJ,KAAK,CAACE,KAAN,CAAYE,QAHjB;AAILC,IAAAA,cAAc,EAAEL,KAAK,CAACE,KAAN,CAAYG,cAJvB;AAKLC,IAAAA,uBAAuB,EAAEN,KAAK,CAACE,KAAN,CAAYI,uBALhC;AAMLC,IAAAA,mBAAmB,EAAEP,KAAK,CAACE,KAAN,CAAYK,mBAN5B;AAOLC,IAAAA,yBAAyB,EAAER,KAAK,CAACE,KAAN,CAAYM;AAPlC,GAAP;AASD,CAVD;;AAWA,eAAe3B,UAAU,CAAED,OAAO,CAACmB,eAAD,EAAkBb,kBAAlB,CAAP,CAA6CF,cAA7C,CAAF,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Saves from '../components/saves/Saves';\nimport * as actions from '../actions';\n\nconst SavesContainer = (props) => {\n  return <Saves {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllSaves: (email) => {\n      dispatch(actions.getAllSaves(email));\n    },\n    getAllCollections: (email) => {\n      dispatch(actions.getAllCollections(email));\n    },\n    deleteSingleSave: (deleteSave) => {\n      dispatch(actions.deleteSingleSave(deleteSave));\n    },\n    showTopSearch: (boolean) => {\n      dispatch(actions.showTopSearch(boolean));\n    },\n    isLoggedIn: (boolean) => {\n      dispatch(actions.checkLogin(boolean))\n    },\n    deleteSingleCollection: (deleteCollection) => {\n      dispatch(actions.deleteSingleCollection(deleteCollection));\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingAllSaves: state.posts.isLoadingAllSaves,\n    allSaves: state.posts.allSaves,\n    allCollections: state.posts.allCollections,\n    isLoadingAllCollections: state.posts.isLoadingAllCollections,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    isLoadingDeleteCollection: state.posts.isLoadingDeleteCollection,\n  };\n};\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(SavesContainer)));\n"]},"metadata":{},"sourceType":"module"}