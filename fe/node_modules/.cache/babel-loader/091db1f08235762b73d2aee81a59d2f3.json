{"ast":null,"code":"var _jsxFileName = \"/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/NavContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../components/nav/Nav';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../actions';\n\nconst NavContainer = props => {\n  return React.createElement(Nav, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateNav: text => dispatch(actions.updateNav(text)),\n    query: text => dispatch(actions.query(text)),\n    getImgsList: (page, query) => {\n      dispatch(actions.getImgsList(page, query));\n    },\n    getSynonymList: word => {\n      dispatch(actions.getSynonymList(word));\n    },\n    initImgs: array => {\n      dispatch(actions.initImgs(array));\n    },\n    showTopSearch: boolean => {\n      dispatch(actions.showTopSearch(boolean));\n    },\n    isLoggedIn: boolean => {\n      dispatch(actions.checkLogin(boolean));\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    navText: state.nav.navText,\n    queryTxt: state.posts.queryTxt,\n    topSearch: state.posts.topSearch,\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingSaveImg: state.posts.isLoadingSaveImg,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    isLoadingDeleteCollection: state.posts.isLoadingDeleteCollection\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/NavContainer.js"],"names":["React","connect","Nav","withRouter","actions","NavContainer","props","mapDispatchToProps","dispatch","updateNav","text","query","getImgsList","page","getSynonymList","word","initImgs","array","showTopSearch","boolean","isLoggedIn","checkLogin","mapStateToProps","state","navText","nav","queryTxt","posts","topSearch","isAuthenticated","isLoadingSaveImg","isLoadingDeleteSave","isLoadingDeleteCollection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,SAAO,oBAAC,GAAD,oBAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,SAAS,EAAEC,IAAI,IAAIF,QAAQ,CAACJ,OAAO,CAACK,SAAR,CAAkBC,IAAlB,CAAD,CADtB;AAELC,IAAAA,KAAK,EAAED,IAAI,IAAIF,QAAQ,CAACJ,OAAO,CAACO,KAAR,CAAcD,IAAd,CAAD,CAFlB;AAGLE,IAAAA,WAAW,EAAE,CAACC,IAAD,EAAMF,KAAN,KAAgB;AAC3BH,MAAAA,QAAQ,CAACJ,OAAO,CAACQ,WAAR,CAAoBC,IAApB,EAAyBF,KAAzB,CAAD,CAAR;AACD,KALI;AAMLG,IAAAA,cAAc,EAAGC,IAAD,IAAU;AACxBP,MAAAA,QAAQ,CAACJ,OAAO,CAACU,cAAR,CAAuBC,IAAvB,CAAD,CAAR;AACD,KARI;AASLC,IAAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBT,MAAAA,QAAQ,CAACJ,OAAO,CAACY,QAAR,CAAiBC,KAAjB,CAAD,CAAR;AACD,KAXI;AAYLC,IAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BX,MAAAA,QAAQ,CAACJ,OAAO,CAACc,aAAR,CAAsBC,OAAtB,CAAD,CAAR;AACD,KAdI;AAeLC,IAAAA,UAAU,EAAGD,OAAD,IAAa;AACvBX,MAAAA,QAAQ,CAACJ,OAAO,CAACiB,UAAR,CAAmBF,OAAnB,CAAD,CAAR;AACD;AAjBI,GAAP;AAmBD,CApBD;;AAqBA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,GAAN,CAAUD,OADd;AAELE,IAAAA,QAAQ,EAAEH,KAAK,CAACI,KAAN,CAAYD,QAFjB;AAGLE,IAAAA,SAAS,EAAEL,KAAK,CAACI,KAAN,CAAYC,SAHlB;AAILC,IAAAA,eAAe,EAAEN,KAAK,CAACI,KAAN,CAAYE,eAJxB;AAKLC,IAAAA,gBAAgB,EAAEP,KAAK,CAACI,KAAN,CAAYG,gBALzB;AAMLC,IAAAA,mBAAmB,EAAER,KAAK,CAACI,KAAN,CAAYI,mBAN5B;AAOLC,IAAAA,yBAAyB,EAAET,KAAK,CAACI,KAAN,CAAYK;AAPlC,GAAP;AASD,CAVD;;AAYA,eAAe7B,UAAU,CAACF,OAAO,CAACqB,eAAD,EAAkBf,kBAAlB,CAAP,CAA6CF,YAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../components/nav/Nav';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../actions';\n\nconst NavContainer = (props) => {\n  return <Nav {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateNav: text => dispatch(actions.updateNav(text)),\n    query: text => dispatch(actions.query(text)),\n    getImgsList: (page,query) => {\n      dispatch(actions.getImgsList(page,query));\n    },\n    getSynonymList: (word) => {\n      dispatch(actions.getSynonymList(word));\n    },\n    initImgs: array => {\n      dispatch(actions.initImgs(array));\n    },\n    showTopSearch: (boolean) => {\n      dispatch(actions.showTopSearch(boolean));\n    },\n    isLoggedIn: (boolean) => {\n      dispatch(actions.checkLogin(boolean))\n    }\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    navText: state.nav.navText,\n    queryTxt: state.posts.queryTxt,\n    topSearch: state.posts.topSearch,\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingSaveImg: state.posts.isLoadingSaveImg,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    isLoadingDeleteCollection: state.posts.isLoadingDeleteCollection,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavContainer));\n"]},"metadata":{},"sourceType":"module"}