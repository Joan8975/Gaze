{"ast":null,"code":"var _jsxFileName = \"/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/nav/Nav.js\";\nimport React, { Component, Fragment } from 'react';\nimport './Nav.css';\nimport { Route, Link } from 'react-router-dom';\nimport Notifications, { notify } from 'react-notify-toast';\n\nconst MenuLink = ({\n  label,\n  to,\n  activeOnlyWhenExact,\n  updateNav,\n  className\n}) => React.createElement(Route, {\n  path: to,\n  exact: activeOnlyWhenExact,\n  children: ({\n    match\n  }) => React.createElement(Link, {\n    className: \"\".concat(className, \" \").concat(match ? \"\".concat(className, \"_active\") : ''),\n    to: to,\n    onClick: () => updateNav(to),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, label),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n});\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = e => {\n      const query = this.props.query;\n      query(e.target.value);\n    };\n\n    this.handleKeyPress = e => {\n      const _this$props = this.props,\n            history = _this$props.history,\n            getImgsList = _this$props.getImgsList,\n            queryTxt = _this$props.queryTxt,\n            initImgs = _this$props.initImgs,\n            getSynonymList = _this$props.getSynonymList;\n\n      if (e.key === 'Enter') {\n        initImgs([]);\n        getImgsList(1, queryTxt);\n        getSynonymList(queryTxt);\n        history.push('/search/' + queryTxt);\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const _this$props2 = this.props,\n          isLoadingSaveImg = _this$props2.isLoadingSaveImg,\n          isLoadingDeleteSave = _this$props2.isLoadingDeleteSave,\n          isLoadingDeleteCollection = _this$props2.isLoadingDeleteCollection;\n\n    if (prevProps.isLoadingSaveImg === false && isLoadingSaveImg === true) {\n      let myColor = {\n        background: \"#d6bb8b\",\n        text: \"#FFFFFF\"\n      };\n      notify.show(\"Saved successfully!\", \"custom\", 2000, myColor);\n    }\n\n    if (prevProps.isLoadingDeleteSave === false && isLoadingDeleteSave === true) {\n      let myColor = {\n        background: '#d6bb8b',\n        text: \"#FFFFFF\"\n      };\n      notify.show(\"Deleted successfully\", \"custom\", 2000, myColor);\n    }\n\n    if (prevProps.isLoadingDeleteCollection === false && isLoadingDeleteCollection === true) {\n      let myColor = {\n        background: '#d6bb8b',\n        text: \"#FFFFFF\"\n      };\n      notify.show(\"Deleted successfully\", \"custom\", 2000, myColor);\n    }\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          updateNav = _this$props3.updateNav,\n          queryTxt = _this$props3.queryTxt,\n          topSearch = _this$props3.topSearch,\n          isAuthenticated = _this$props3.isAuthenticated;\n    const userLinks = React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(MenuLink, {\n      activeOnlyWhenExact: true,\n      to: \"/\",\n      label: \"Home\",\n      updateNav: updateNav,\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(MenuLink, {\n      to: \"/saves/photos\",\n      label: \"My Board\",\n      updateNav: updateNav,\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n    const guestLinks = React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MenuLink, {\n      to: \"/login\",\n      label: \"Login\",\n      updateNav: updateNav,\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(MenuLink, {\n      to: \"/Signup\",\n      label: \"Sign up now!\",\n      updateNav: updateNav,\n      className: \"tab_signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Notifications, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"nav_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MenuLink, {\n      activeOnlyWhenExact: true,\n      to: \"/\",\n      updateNav: updateNav,\n      className: \"tab_home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), topSearch && React.createElement(\"div\", {\n      hidden: true,\n      className: \"top_search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search_txt\",\n      name: \"query\",\n      value: queryTxt,\n      onChange: this.handleChange,\n      onKeyPress: this.handleKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), isAuthenticated ? userLinks : guestLinks));\n  }\n\n}\n\nexport default Nav;","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/components/nav/Nav.js"],"names":["React","Component","Fragment","Route","Link","Notifications","notify","MenuLink","label","to","activeOnlyWhenExact","updateNav","className","match","Nav","handleChange","e","query","props","target","value","handleKeyPress","history","getImgsList","queryTxt","initImgs","getSynonymList","key","push","componentDidUpdate","prevProps","prevState","isLoadingSaveImg","isLoadingDeleteSave","isLoadingDeleteCollection","myColor","background","text","show","render","topSearch","isAuthenticated","userLinks","guestLinks"],"mappings":"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","sourcesContent":["import React, { Component,Fragment }  from 'react';\nimport './Nav.css';\nimport { Route, Link } from 'react-router-dom';\nimport Notifications, {notify} from 'react-notify-toast';\n\nconst MenuLink = ({ label, to, activeOnlyWhenExact, updateNav,className }) => (\n  <Route\n    path={to}\n    exact={activeOnlyWhenExact}\n    children={({ match }) => (\n      <Link className={`${className} ${match ? `${className}_active` : ''}`} to={to} onClick={() => updateNav(to)}>{label}</Link>\n    )}\n  />\n);\n\nclass Nav extends Component {\n  handleChange = (e) => {\n    const {query} = this.props;\n    query(e.target.value)\n  }\n\n  handleKeyPress = (e) => {\n    const {history,getImgsList,queryTxt,initImgs,getSynonymList} = this.props;\n    if(e.key === 'Enter') {\n      initImgs([])\n      getImgsList(1, queryTxt);\n      getSynonymList(queryTxt)\n      history.push('/search/'+ queryTxt);\n    }\n  }\n  \n  componentDidUpdate(prevProps,prevState) {\n    const { isLoadingSaveImg,isLoadingDeleteSave,isLoadingDeleteCollection} = this.props;\n    if (prevProps.isLoadingSaveImg === false && isLoadingSaveImg === true) {\n      let myColor = { background: \"#d6bb8b\", text: \"#FFFFFF\" };\n      notify.show(\"Saved successfully!\", \"custom\", 2000, myColor);\n    }\n    if (prevProps.isLoadingDeleteSave === false && isLoadingDeleteSave === true) {\n      let myColor = { background: '#d6bb8b', text: \"#FFFFFF\" };\n      notify.show(\"Deleted successfully\", \"custom\", 2000, myColor);\n    }\n    if (prevProps.isLoadingDeleteCollection === false && isLoadingDeleteCollection === true) {\n      let myColor = { background: '#d6bb8b', text: \"#FFFFFF\" };\n      notify.show(\"Deleted successfully\", \"custom\", 2000, myColor);\n    }\n\n  }\n\n  render() {\n    const {updateNav,queryTxt,topSearch, isAuthenticated } = this.props\n\n    const userLinks = (\n      <nav>\n        <MenuLink activeOnlyWhenExact={true} to=\"/\" label=\"Home\" updateNav={updateNav} className=\"tab\"/>\n        <MenuLink to=\"/saves/photos\" label=\"My Board\" updateNav={updateNav} className=\"tab\"/>\n      </nav>\n    )\n    const guestLinks = (\n      <nav>\n        <MenuLink to=\"/login\" label=\"Login\" updateNav={updateNav} className=\"tab\"/>\n        <MenuLink to=\"/Signup\" label=\"Sign up now!\" updateNav={updateNav} className=\"tab_signup\"/>\n      </nav>\n    )\n\n    return(\n      <Fragment>\n        <Notifications />\n        <div className=\"nav_bar\">\n          <MenuLink activeOnlyWhenExact={true} to=\"/\" updateNav={updateNav} className=\"tab_home\"/>\n          {topSearch && \n          <div hidden className=\"top_search\">    \n            <input type=\"text\" className=\"search_txt\" name=\"query\"          \n              value={queryTxt}\n              onChange={this.handleChange}\n              onKeyPress={this.handleKeyPress}\n              />\n            <i className=\"fas fa-search\"></i>\n          </div>}\n          { isAuthenticated ? userLinks : guestLinks}\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}