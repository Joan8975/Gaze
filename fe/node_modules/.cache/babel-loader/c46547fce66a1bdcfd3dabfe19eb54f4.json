{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Collections from'../components/collections/Collections';import*as actions from'../actions';var CollectionsContainer=function CollectionsContainer(props){return React.createElement(Collections,props);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getCollectionSaves:function getCollectionSaves(email,collection){dispatch(actions.getCollectionSaves(email,collection));},deleteSingleSave:function deleteSingleSave(deleteSave){dispatch(actions.deleteSingleSave(deleteSave));}// getAllCollections: (email) => {\n//   dispatch(actions.getAllCollections(email));\n// },\n// deleteSingleSave: (deleteSave) => {\n//   dispatch(actions.deleteSingleSave(deleteSave));\n// }\n};};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.posts.isAuthenticated,isLoadingCollectionSaves:state.posts.isLoadingCollectionSaves,collectionSaves:state.posts.collectionSaves,isLoadingDeleteSave:state.posts.isLoadingDeleteSave,deleteSaveMsg:state.posts.deleteSaveMsg// isLoadingAllSaves: state.posts.isLoadingAllSaves,\n// allSaves: state.posts.allSaves,\n// allCollections: state.posts.allCollections,\n// isLoadingAllCollections: state.posts.isLoadingAllCollections,\n};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(CollectionsContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/CollectionsContainer.js"],"names":["React","connect","withRouter","Collections","actions","CollectionsContainer","props","mapDispatchToProps","dispatch","getCollectionSaves","email","collection","deleteSingleSave","deleteSave","mapStateToProps","state","isAuthenticated","posts","isLoadingCollectionSaves","collectionSaves","isLoadingDeleteSave","deleteSaveMsg"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,uCAAxB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACtC,MAAO,qBAAC,WAAD,CAAiBA,KAAjB,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,kBAAkB,CAAE,4BAACC,KAAD,CAAOC,UAAP,CAAsB,CACxCH,QAAQ,CAACJ,OAAO,CAACK,kBAAR,CAA2BC,KAA3B,CAAiCC,UAAjC,CAAD,CAAR,CACD,CAHI,CAILC,gBAAgB,CAAE,0BAACC,UAAD,CAAgB,CAChCL,QAAQ,CAACJ,OAAO,CAACQ,gBAAR,CAAyBC,UAAzB,CAAD,CAAR,CACD,CACD;AACA;AACA;AACA;AACA;AACA;AAZK,CAAP,CAeD,CAhBD,CAiBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,eAAe,CAAED,KAAK,CAACE,KAAN,CAAYD,eADxB,CAELE,wBAAwB,CAAEH,KAAK,CAACE,KAAN,CAAYC,wBAFjC,CAGLC,eAAe,CAAEJ,KAAK,CAACE,KAAN,CAAYE,eAHxB,CAILC,mBAAmB,CAAEL,KAAK,CAACE,KAAN,CAAYG,mBAJ5B,CAKLC,aAAa,CAAEN,KAAK,CAACE,KAAN,CAAYI,aAC3B;AACA;AACA;AACA;AATK,CAAP,CAWD,CAZD,CAaA,cAAenB,CAAAA,UAAU,CAAED,OAAO,CAACa,eAAD,CAAkBP,kBAAlB,CAAP,CAA6CF,oBAA7C,CAAF,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Collections from '../components/collections/Collections';\nimport * as actions from '../actions';\n\nconst CollectionsContainer = (props) => {\n  return <Collections {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCollectionSaves: (email,collection) => {\n      dispatch(actions.getCollectionSaves(email,collection));\n    },\n    deleteSingleSave: (deleteSave) => {\n      dispatch(actions.deleteSingleSave(deleteSave));\n    }\n    // getAllCollections: (email) => {\n    //   dispatch(actions.getAllCollections(email));\n    // },\n    // deleteSingleSave: (deleteSave) => {\n    //   dispatch(actions.deleteSingleSave(deleteSave));\n    // }\n\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.posts.isAuthenticated,\n    isLoadingCollectionSaves: state.posts.isLoadingCollectionSaves,\n    collectionSaves: state.posts.collectionSaves,\n    isLoadingDeleteSave: state.posts.isLoadingDeleteSave,\n    deleteSaveMsg: state.posts.deleteSaveMsg,\n    // isLoadingAllSaves: state.posts.isLoadingAllSaves,\n    // allSaves: state.posts.allSaves,\n    // allCollections: state.posts.allCollections,\n    // isLoadingAllCollections: state.posts.isLoadingAllCollections,\n  };\n};\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(CollectionsContainer)));\n"]},"metadata":{},"sourceType":"module"}