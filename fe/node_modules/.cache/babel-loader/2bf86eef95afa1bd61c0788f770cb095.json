{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Selector from'../components/selector/Selector';import*as actions from'../actions';var SelectorContainer=function SelectorContainer(props){return React.createElement(Selector,props);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getAllCollections:function getAllCollections(email){dispatch(actions.getAllCollections(email));},saveNewImg:function saveNewImg(newSave){dispatch(actions.saveNewImg(newSave));},getPreviewImg:function getPreviewImg(imgId){dispatch(actions.getPreviewImg(imgId));}};};var mapStateToProps=function mapStateToProps(state){return{allCollections:state.posts.allCollections,isLoadingAllCollections:state.posts.isLoadingAllCollections,isLoadingSaveImg:state.posts.isLoadingSaveImg,isLoadingPreviewImg:state.posts.isLoadingPreviewImg,previewImg:state.posts.previewImg};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(SelectorContainer));","map":{"version":3,"sources":["/Users/Lingo/Rong/JavaScript/26_portfolio/gaze_project/gaze/src/containers/SelectorContainer.js"],"names":["React","connect","withRouter","Selector","actions","SelectorContainer","props","mapDispatchToProps","dispatch","getAllCollections","email","saveNewImg","newSave","getPreviewImg","imgId","mapStateToProps","state","allCollections","posts","isLoadingAllCollections","isLoadingSaveImg","isLoadingPreviewImg","previewImg"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,YAAzB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnC,MAAO,qBAAC,QAAD,CAAcA,KAAd,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACvC,MAAO,CACLC,iBAAiB,CAAE,2BAACC,KAAD,CAAW,CAC5BF,QAAQ,CAACJ,OAAO,CAACK,iBAAR,CAA0BC,KAA1B,CAAD,CAAR,CACD,CAHI,CAILC,UAAU,CAAE,oBAACC,OAAD,CAAa,CACvBJ,QAAQ,CAACJ,OAAO,CAACO,UAAR,CAAmBC,OAAnB,CAAD,CAAR,CACD,CANI,CAOLC,aAAa,CAAE,uBAACC,KAAD,CAAW,CACxBN,QAAQ,CAACJ,OAAO,CAACS,aAAR,CAAsBC,KAAtB,CAAD,CAAR,CACD,CATI,CAAP,CAWD,CAZD,CAaA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLC,cAAc,CAAED,KAAK,CAACE,KAAN,CAAYD,cADvB,CAELE,uBAAuB,CAAEH,KAAK,CAACE,KAAN,CAAYC,uBAFhC,CAGLC,gBAAgB,CAAEJ,KAAK,CAACE,KAAN,CAAYE,gBAHzB,CAILC,mBAAmB,CAAEL,KAAK,CAACE,KAAN,CAAYG,mBAJ5B,CAKLC,UAAU,CAAEN,KAAK,CAACE,KAAN,CAAYI,UALnB,CAAP,CAOD,CARD,CASA,cAAepB,CAAAA,UAAU,CAAED,OAAO,CAACc,eAAD,CAAkBR,kBAAlB,CAAP,CAA6CF,iBAA7C,CAAF,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Selector from '../components/selector/Selector';\nimport * as actions from '../actions';\n\nconst SelectorContainer = (props) => {\n  return <Selector {...props} />;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return { \n    getAllCollections: (email) => {\n      dispatch(actions.getAllCollections(email));\n    },\n    saveNewImg: (newSave) => {\n      dispatch(actions.saveNewImg(newSave));\n    },\n    getPreviewImg: (imgId) => {\n      dispatch(actions.getPreviewImg(imgId));\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    allCollections: state.posts.allCollections,\n    isLoadingAllCollections: state.posts.isLoadingAllCollections,\n    isLoadingSaveImg: state.posts.isLoadingSaveImg,\n    isLoadingPreviewImg: state.posts.isLoadingPreviewImg,\n    previewImg: state.posts.previewImg,\n  };\n};\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(SelectorContainer)));\n"]},"metadata":{},"sourceType":"module"}